3. algorithms

* big O notation
O (upper bound)
Omega (lower bound)
Theta (upper == lower bound)

commonly seen:
O(n^2)
O(n log n)
O(n)
O(log n)
O(1)

* linear search
    just searching left to right
    O(n)
    Omega(1)

* binary search
    (phonebook tearing)
    O(log n) -> keep halving
    Omega(1)
